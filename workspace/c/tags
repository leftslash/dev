!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FIELD_DESCRIPTION!Python	nameref	/the original name for the tag/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C	m,member	/struct, and union members/
!_TAG_KIND_DESCRIPTION!C	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!C++	M,module	/modules/
!_TAG_KIND_DESCRIPTION!C++	P,partition	/partitions/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!Python	I,namespace	/name referring a module defined in other file/
!_TAG_KIND_DESCRIPTION!Python	Y,unknown	/name referring a class\/variable\/function\/module defined in other module/
!_TAG_KIND_DESCRIPTION!Python	c,class	/classes/
!_TAG_KIND_DESCRIPTION!Python	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Python	i,module	/modules/
!_TAG_KIND_DESCRIPTION!Python	m,member	/class members/
!_TAG_KIND_DESCRIPTION!Python	v,variable	/variables/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	1.1	/current.age/
!_TAG_PARSER_VERSION!C	2.2	/current.age/
!_TAG_PARSER_VERSION!C++	2.2	/current.age/
!_TAG_PARSER_VERSION!Python	1.1	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/Users/todd/stuff/work/dev/workspace/c/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.2.0	//
!_TAG_ROLE_DESCRIPTION!C!function	foreigncall	/called in foreign languages/
!_TAG_ROLE_DESCRIPTION!C!function	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C!struct	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C++!header	exported	/exported with "exported imported ..."/
!_TAG_ROLE_DESCRIPTION!C++!header	imported	/imported with "imported ..."/
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C++!module	imported	/imported with "imported ..."/
!_TAG_ROLE_DESCRIPTION!C++!module	partOwner	/used for specifying a partition/
!_TAG_ROLE_DESCRIPTION!C++!partition	imported	/imported with "imported ..."/
!_TAG_ROLE_DESCRIPTION!Python!function	entryPoint	/specified as an entry point/
!_TAG_ROLE_DESCRIPTION!Python!module	entryPoint	/specified as a module of an entry point/
!_TAG_ROLE_DESCRIPTION!Python!module	imported	/imported modules/
!_TAG_ROLE_DESCRIPTION!Python!module	indirectlyImported	/module imported in alternative name/
!_TAG_ROLE_DESCRIPTION!Python!module	namespace	/namespace from where classes\/variables\/functions are imported/
!_TAG_ROLE_DESCRIPTION!Python!unknown	imported	/imported from the other module/
!_TAG_ROLE_DESCRIPTION!Python!unknown	indirectlyImported	/classes\/variables\/functions\/modules imported in alternative name/
BUFSIZE	src/getch.c	/^#define BUFSIZE /;"	d	file:
DEBUG_H	src/debug.h	/^#define DEBUG_H$/;"	d
HASHSIZE	src/hash.c	/^#define HASHSIZE /;"	d	file:
ITERATIONS	src/benchmark.c	/^#define ITERATIONS /;"	d	file:
MAX	src/fgets_getline.c	/^#define MAX /;"	d	file:
MAXKEYS	src/binsearch.c	/^#define MAXKEYS /;"	d	file:
MAXOP	src/main.c	/^#define MAXOP /;"	d	file:
MAXVAL	src/stack.c	/^#define MAXVAL /;"	d	file:
NUMBER	src/calc.h	/^#define NUMBER /;"	d
Object	src/object.c	/^typedef struct Object {$/;"	s	file:
Object	src/object.c	/^} Object;$/;"	t	typeref:struct:Object	file:
SWAP_H	src/swap.h	/^#define SWAP_H$/;"	d
SWAP_H	src/swap2.h	/^#define SWAP_H$/;"	d
__STDC_WANT_LIB_EXT2__	src/gnu_getline.c	/^#define __STDC_WANT_LIB_EXT2__ /;"	d	file:
addone	src/const.c	/^void addone(struct s *s) {$/;"	f	typeref:typename:void
atoi	src/bitcount.c	/^int atoi(char s[]) {$/;"	f	typeref:typename:int
binsearch	src/binsearch.c	/^int binsearch(char *word, struct key tab[], int n) {$/;"	f	typeref:typename:int
bitcount	src/bitcount.c	/^int bitcount(unsigned int x) {$/;"	f	typeref:typename:int
buf	src/getch.c	/^static char buf[BUFSIZE];$/;"	v	typeref:typename:char[]	file:
bufp	src/getch.c	/^static int bufp = 0;$/;"	v	typeref:typename:int	file:
count	src/binsearch.c	/^  int count;$/;"	m	struct:key	typeref:typename:int	file:
debug	src/debug.h	/^#define debug(/;"	d
debug_prefix	src/debug.h	/^void debug_prefix(const char *file, int line) {$/;"	f	typeref:typename:void
debug_print	src/debug.h	/^void debug_print(const char *fmt, ...) {$/;"	f	typeref:typename:void
defn	src/hash.c	/^  char *defn;$/;"	m	struct:nlist	typeref:typename:char *	file:
fgetline	src/fgets_getline.c	/^int fgetline(FILE *f, char *buf, int n) {$/;"	f	typeref:typename:int
findAndReturnMax	src/gdb_badprog.c	/^int findAndReturnMax(int *array1, int len, int max) {$/;"	f	typeref:typename:int
free	src/object.c	/^  void (*free)(struct Object *);$/;"	m	struct:Object	typeref:typename:void (*)(struct Object *)	file:
free_	src/object.c	/^static void free_(Object *object) {$/;"	f	typeref:typename:void	file:
getch	src/getch.c	/^int getch(void) {$/;"	f	typeref:typename:int
getline	src/getline.c	/^int getline(char buf[], int max) {$/;"	f	typeref:typename:int
getop	src/getop.c	/^int getop(char s[]) {$/;"	f	typeref:typename:int
hash	src/hash.c	/^static unsigned hash(char *s) {$/;"	f	typeref:typename:unsigned	file:
hashtab	src/hash.c	/^static struct nlist *hashtab[HASHSIZE];$/;"	v	typeref:struct:nlist * []	file:
htoi	src/htoi.c	/^int htoi(char s[]) {$/;"	f	typeref:typename:int
i	src/const.c	/^  int i;$/;"	m	struct:s	typeref:typename:int	file:
increment	src/const.c	/^int increment(const struct s *s) {$/;"	f	typeref:typename:int
install	src/hash.c	/^struct nlist *install(char *name, char *defn) {$/;"	f	typeref:struct:nlist *
key	src/binsearch.c	/^struct key {$/;"	s	file:
lookup	src/hash.c	/^struct nlist *lookup(char *s) {$/;"	f	typeref:struct:nlist *
lower	src/lower.c	/^void lower(char s[]) {$/;"	f	typeref:typename:void
main	src/assert.c	/^int main(int argc, char **argv) {$/;"	f	typeref:typename:int
main	src/benchmark.c	/^int main() {$/;"	f	typeref:typename:int
main	src/bitcount.c	/^int main(int argc, char **argv) {$/;"	f	typeref:typename:int
main	src/c89.c	/^int main(int argc, char **argv) {$/;"	f	typeref:typename:int
main	src/const.c	/^int main() {$/;"	f	typeref:typename:int
main	src/debug.c	/^int main(int argc, char **argv) {$/;"	f	typeref:typename:int
main	src/fgets_getline.c	/^int main() {$/;"	f	typeref:typename:int
main	src/gdb_badprog.c	/^int main(int argc, char *argv[]) {$/;"	f	typeref:typename:int
main	src/gnu_getline.c	/^int main() {$/;"	f	typeref:typename:int
main	src/hello.c	/^main() {$/;"	f
main	src/htoi.c	/^int main(int argc, char **argv) {$/;"	f	typeref:typename:int
main	src/lower.c	/^int main(int argc, char **argv) {$/;"	f	typeref:typename:int
main	src/main.c	/^int main() {$/;"	f	typeref:typename:int
main	src/object.c	/^int main() {$/;"	f	typeref:typename:int
main	src/shellsort.c	/^int main(int argc, char **argv) {$/;"	f	typeref:typename:int
main	src/standard.c	/^int main() {$/;"	f	typeref:typename:int
main	src/static.c	/^int main() {$/;"	f	typeref:typename:int
main	src/struct.c	/^int main() {$/;"	f	typeref:typename:int
main	src/swap.c	/^int main() {$/;"	f	typeref:typename:int
main	src/swap2.c	/^int main() {$/;"	f	typeref:typename:int
main	src/unsigned_coercion.c	/^int main() {$/;"	f	typeref:typename:int
main	src/variable_length_array.c	/^int main(int argc, char **argv) {$/;"	f	typeref:typename:int
name	src/hash.c	/^  char *name;$/;"	m	struct:nlist	typeref:typename:char *	file:
name	src/struct.c	/^  char name[10];$/;"	m	struct:thing	typeref:typename:char[10]	file:
new_object	src/object.c	/^Object *new_object(int value) {$/;"	f	typeref:typename:Object *
new_thing	src/struct.c	/^struct thing new_thing() {$/;"	f	typeref:struct:thing
next	src/hash.c	/^  struct nlist *next;$/;"	m	struct:nlist	typeref:struct:nlist *	file:
next	src/rand.c	/^unsigned long int next = 1;$/;"	v	typeref:typename:unsigned long int
nlist	src/hash.c	/^struct nlist {$/;"	s	file:
pop	src/stack.c	/^double pop(void) {$/;"	f	typeref:typename:double
print	src/object.c	/^  void (*print)(struct Object *);$/;"	m	struct:Object	typeref:typename:void (*)(struct Object *)	file:
print_	src/object.c	/^static void print_(Object *object) {$/;"	f	typeref:typename:void	file:
push	src/stack.c	/^void push(double f) {$/;"	f	typeref:typename:void
rand	src/rand.c	/^int rand(void) {$/;"	f	typeref:typename:int
s	src/const.c	/^struct s {$/;"	s	file:
sort	src/shellsort.c	/^void sort(int v[], int n) {$/;"	f	typeref:typename:void
sp	src/stack.c	/^static int sp = 0;$/;"	v	typeref:typename:int	file:
srand	src/rand.c	/^void srand(unsigned int seed) {$/;"	f	typeref:typename:void
strindex	src/getline.c	/^int strindex(char s[], char t[]) {$/;"	f	typeref:typename:int
swap	src/swap.h	/^#define swap(/;"	d
swap	src/swap2.h	/^#define swap(/;"	d
tab	src/binsearch.c	/^} tab[MAXKEYS];$/;"	v	typeref:struct:key[]
thing	src/struct.c	/^struct thing {$/;"	s	file:
ungetch	src/getch.c	/^void ungetch(int c) {$/;"	f	typeref:typename:void
val	src/stack.c	/^static double val[MAXVAL];$/;"	v	typeref:typename:double[]	file:
value	src/object.c	/^  int value;$/;"	m	struct:Object	typeref:typename:int	file:
widget	src/struct.c	/^  int widget;$/;"	m	struct:thing	typeref:typename:int	file:
word	src/binsearch.c	/^  char *word;$/;"	m	struct:key	typeref:typename:char *	file:
